@model Employees.Models.UserVM.UserCreateVM

@{
    ViewData["Title"] = "Добавить пользователя";
}

<div>
    <h4>Добавить нового пользователя</h4>
</div>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(m => m.Employee, "Сотрудник:")
                <br />
                @Html.DropDownListFor(m => m.Employee, (IEnumerable<SelectListItem>)ViewData["Employees"])
                @Html.ValidationMessageFor(m => m.Employee, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label asp-for="Login" class="control-label"></label>
                <input asp-for="Login" class="form-control" />
                <span asp-validation-for="Login" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Role, "Роль:")
                <br />
                @Html.DropDownListFor(m => m.Role, (IEnumerable<SelectListItem>)ViewData["Roles"])
                @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-success" value="Добавить" />
                <input type="button" class="btn btn-warning" onclick="location.href='@Url.Action("Index")'" value="Отменить" />
            </div>
        </form>
    </div>
</div>
